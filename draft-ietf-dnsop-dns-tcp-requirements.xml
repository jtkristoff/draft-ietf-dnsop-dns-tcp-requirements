<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

  <!-- User Datagram Protocol -->
  <!ENTITY RFC0768 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0768.xml">
  <!-- TRANSMISSION CONTROL PROTOCOL -->
  <!ENTITY RFC0793 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0793.xml">
  <!-- DOMAIN NAMES - CONCEPTS AND FACILITIES -->
  <!ENTITY RFC1034 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml">
  <!-- DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION -->
  <!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
  <!-- double hyphen in comments not allowed, ASCII escape sequence used instead -->
  <!-- Requirements for Internet Hosts &#45;&#45; Application and Support -->
  <!ENTITY RFC1123 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1123.xml">
  <!-- Common DNS Implementation Errors and Suggested Fixes -->
  <!ENTITY RFC1536 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1536.xml">
  <!-- Incremental Zone Transfer in DNS -->
  <!ENTITY RFC1995 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1995.xml">
  <!-- A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY) -->
  <!ENTITY RFC1996 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1996.xml">
  <!-- Dynamic Updates in the Domain Name System (DNS UPDATE) -->
  <!ENTITY RFC2136 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2136.xml">
  <!-- Clarifications to the DNS Specification -->
  <!ENTITY RFC2181 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2181.xml">
  <!-- Domain Name System Security Extensions -->
  <!ENTITY RFC2541 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2541.xml">
  <!-- Extension Mechanisms for DNS (EDNS(0)) -->
  <!ENTITY RFC2671 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2671.xml">
  <!-- DNS extensions to Network Address Translators (DNS_ALG) -->
  <!ENTITY RFC2694 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2694.xml">
  <!-- Indicating Resolver Support of DNSSEC -->
  <!ENTITY RFC3225 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3225.xml">
  <!-- DNSSEC and IPv6 A6 aware server/resolver message size requirements -->
  <!ENTITY RFC3226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3226.xml">
  <!-- Operational Considerations and Issues with IPv6 DNS -->
  <!ENTITY RFC4472 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4472.xml">
  <!-- Defending TCP Against Spoofing Attacks -->
  <!ENTITY RFC4953 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4953.xml">
  <!-- TCP SYN Flooding Attacks and Common Mitigations -->
  <!ENTITY RFC4987 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4987.xml">
  <!-- Preventing Use of Recursive Nameservers in Reflector Attacks -->
  <!ENTITY RFC5358 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5358.xml">
  <!-- Measures for Making DNS More Resilient against Forged Answers -->
  <!ENTITY RFC5452 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5452.xml">
  <!-- Design Choices When Expanding the DNS -->
  <!ENTITY RFC5507 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5507.xml">
  <!-- DNS Proxy Implementation Guidelines -->
  <!ENTITY RFC5625 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5625.xml">
  <!-- ICMP Attacks against TCP -->
  <!ENTITY RFC5927 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5927.xml">
  <!-- DNS Zone Transfer Protocol (AXFR) -->
  <!ENTITY RFC5936 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5936.xml">
  <!-- Improving TCP's Robustness to Blind In-Window Attacks -->
  <!ENTITY RFC5961 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5961.xml">
  <!-- Multicast DNS -->
  <!ENTITY RFC6762 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6762.xml">
  <!-- Extension Mechanisms for DNS (EDNS (0)) -->
  <!ENTITY RFC6891 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6891.xml">
  <!-- Architectural Considerations on Application Features in the DNS -->
  <!ENTITY RFC6950 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6950.xml">
  <!-- TCP Fast Open -->
  <!ENTITY RFC7413 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7413.xml">
  <!-- Child-to-Parent Synchronization in DNS -->
  <!ENTITY RFC7477 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7477.xml">
  <!-- AS112 Nameserver Operations -->
  <!ENTITY RFC7534 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7534.xml">
  <!-- Root Name Service Requirements -->
  <!ENTITY RFC7720 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7720.xml">
  <!-- DNS Transport over TCP - Implementation Requirements -->
  <!ENTITY RFC7766 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7766.xml">
  <!-- The edns-tcp-keepalive EDNS(0) Option -->
  <!ENTITY RFC7828 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7828.xml">
  <!-- Specification for DNS over Transport Layer Security (TLS) -->
  <!ENTITY RFC7858 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7858.xml">
  <!-- Domain Name System (DNS) Cookies -->
  <!ENTITY RFC7873 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7873.xml">
  <!-- CHAIN Query Requests in DNS -->
  <!ENTITY RFC7901 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7901.xml">
  <!-- TLS False Start -->
  <!ENTITY RFC7918 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7918.xml">
  <!-- DNSSEC Roadblock Avoidance -->
  <!ENTITY RFC8027 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8027.xml">
  <!-- DNS over DTLS -->
  <!ENTITY RFC8094 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8094.xml">
  <!-- DNS-Based Authentication for S/MIME -->
  <!ENTITY RFC8162 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8162.xml">
  <!-- Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words -->
  <!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
  <!-- Internet Protocol, Version 6 (IPv6) Specification -->
  <!ENTITY RFC8200 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8200.xml">
  <!-- DNS Privacy, Authorization, Special Uses, Encoding, Characters, Matching, and Root Structure: Time for Another Look? -->
  <!ENTITY RFC8324 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8324.xml">
  <!-- The Transport Layer Security (TLS) Protocol Version 1.3 -->
  <!ENTITY RFC8446 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8446.xml">
  <!-- Padding Policies for Extension Mechanisms for DNS (EDNS(0)) -->
  <!ENTITY RFC8467 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8467.xml">
  <!-- Yeti DNS Testbed -->
  <!ENTITY RFC8483 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8483.xml">
  <!-- Providing Minimal-Sized Responses to DNS Queries That Have QTYPE=ANY -->
  <!ENTITY RFC8482 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8482.xml">
  <!-- DNS Queries over HTTPS (DoH) -->
  <!ENTITY RFC8484 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8484.xml">
  <!-- DNS Stateful Operations -->
  <!ENTITY RFC8490 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8490.xml">
  <!-- Reverse DNS in IPv6 for Internet Service Providers -->
  <!ENTITY RFC8501 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8501.xml">
  <!-- Running a Root Server Local to a Resolver -->
  <!ENTITY RFC8806 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8806.xml">
  <!-- A Common Operational Problem in DNS Servers: Failure to Communicate -->
  <!ENTITY RFC8906 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8906.xml">
  <!-- Recommendations for DNS Privacy Service Operators -->
  <!ENTITY RFC8932 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8932.xml">
  <!-- Secret Key Transaction Authentication for DNS (TSIG) -->
  <!ENTITY RFC8945 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8945.xml">

  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc category="bcp" docName="draft-ietf-dnsop-dns-tcp-requirements-13" ipr="trust200902" updates="1123,1536">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->
 <front>

   <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->
   <title abbrev="DNS Transport over TCP">DNS Transport over TCP - Operational Requirements</title>

   <!-- add 'role="editor"' below for the editors if appropriate -->
   <!-- Another author who claims to be an editor -->

   <author fullname="John Kristoff" initials="J.T." surname="Kristoff">
     <organization>DataPlane.org</organization>
     <address>
       <postal>
         <street></street>
         <city>Chicago</city>
         <region>IL</region>
         <code>60605</code>
         <country>US</country>
       </postal>
       <phone>+1 312 493 0305</phone>
       <email>jtk@dataplane.org</email>
       <uri>https://dataplane.org/jtk/</uri>
     </address>
   </author>

   <author fullname="Duane Wessels" initials="D." surname="Wessels">
     <organization>Verisign</organization>
     <address>
       <postal>
         <street>12061 Bluemont Way</street>
         <city>Reston</city>
         <region>VA</region>
         <code>20190</code>
         <country>US</country>
       </postal>
       <phone>+1 703 948 3200</phone>
       <email>dwessels@verisign.com</email>
       <uri>http://verisign.com</uri>
     </address>
   </author>

   <date year="2021" />
   <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

   <!-- Meta-data Declarations -->

   <area>Operations and Management</area>
   <workgroup>Domain Name System Operations</workgroup>
   <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

   <keyword>DNS</keyword>
   <keyword>TCP</keyword>
   <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

   <abstract>
     <t>This document updates RFC 1123 and RFC 1536.  This
     document strongly encourages the operational practice of permitting
     DNS messages to be carried over TCP on the Internet as a Best
     Current Practice.  Such encouragement is aligned with the
     implementation requirements in RFC 7766.  The use of TCP includes
     both DNS over unencrypted TCP, as well as over an encrypted TLS
     session.  The document also considers the consequences with this
     form of DNS communication and the potential operational issues that
     can arise when this Best Current Practice is not upheld.</t>
   </abstract>
 </front>

 <middle>

   <section title="Introduction">
     <t>DNS messages are delivered using UDP or TCP communications.
     While most DNS transactions are carried over UDP, some operators
     have been led to believe that any DNS over TCP traffic is unwanted
     or unnecessary for general DNS operation.  When DNS over TCP has
     been restricted, a variety of communication failures and debugging
     challenges often arise.  As DNS and new naming system features have
     evolved, TCP as a transport has become increasingly important for
     the correct and safe operation of an Internet DNS.  Reflecting
     modern usage, the DNS standards declare that
     support for TCP is a required part of the DNS implementation
     specifications <xref target="RFC7766"></xref>.  This document is the
     formal requirements equivalent for the operational community,
     encouraging system administrators, network engineers, and security
     staff to ensure DNS over TCP communications support is on par with
     DNS over UDP communications. It updates <xref target="RFC1123"/>
     Section 6.1.3.2 to clarify that all DNS resolvers and recursive
     MUST support and service both TCP and UDP queries, and also
     updates <xref target="RFC1536"/> to remove the misconception
     that TCP is only useful for zone transfers.
     </t>

     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
       NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
       "MAY", and "OPTIONAL" in this document are to be interpreted as
       described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
       appear in all capitals, as shown here.</t>
     </section>

   </section>

   <section title="History of DNS over TCP">
     <t>The curious state of disagreement between operational best practices
     and guidance for DNS transport protocols derives from conflicting
     messages operators have gotten from other operators, implementors,
     and even the IETF.  Sometimes these mixed signals have been
     explicit; on other occasions, conflicting messages have been implicit.  This
     section presents an interpretation of the storied and conflicting
     history that led to this document.  This section is included for
     informational purposes only.</t>

     <section title="Uneven Transport Usage and Preference">
       <t>In the original suite of DNS specifications, <xref
       target="RFC1034"></xref> and <xref target="RFC1035"></xref>
       clearly specified that DNS messages could be carried in either
       UDP or TCP, but they also stated a preference for UDP as the
       best transport for queries in the general case.  As stated in
       <xref target="RFC1035"></xref>:
       <list hangIndent="10" style="empty">
         <t>"While virtual circuits can be used for any DNS activity,
         datagrams are preferred for queries due to their lower overhead
         and better performance."</t>
       </list>
       </t>

       <t>Another early, important, and influential document,
       <xref target="RFC1123"></xref>, marked the preference for a
       transport protocol more
       explicitly:<list hangIndent="10" style="empty">
         <t>"DNS resolvers and recursive servers MUST support UDP, and
         SHOULD support TCP, for sending (non-zone-transfer) queries."
         </t>
       </list>
       and further stipulated:<list hangIndent="10" style="empty">
         <t>"A name server MAY limit the resources it devotes to TCP
         queries, but it SHOULD NOT refuse to service a TCP query just
         because it would have succeeded with UDP."</t>
       </list>
       </t>

       <t>Culminating in <xref target="RFC1536"></xref>, DNS over TCP
       came to be associated primarily with the zone transfer mechanism,
       while most DNS queries and responses were seen as the dominion of
       UDP.</t>
     </section>

     <section title="Waiting for Large Messages and Reliability">
       <t>In the original specifications, the maximum DNS over UDP
       message size was enshrined at 512 bytes.  However, even while
       <xref target="RFC1123"></xref> preferred UDP for non-zone transfer
       queries, it foresaw DNS over TCP becoming more popular in the
       future to overcome this limitation:<list hangIndent="10"
       style="empty">
         <t>"[...] it is also clear that some new DNS record types
         defined in the future will contain information exceeding the
         512 byte limit that applies to UDP, and hence will require
         TCP."</t>
       </list>
       </t>

       <t>At least two new, widely anticipated developments were set to
       elevate the need for DNS over TCP transactions.  The first was
       dynamic updates defined in <xref target="RFC2136"></xref> and the
       second was the set of extensions collectively known as DNSSEC,
       whose operational considerations are originally given in <xref target="RFC2541"/>.  The
       former suggested "requestors who require an accurate response
       code must use TCP," while the latter warned "... larger keys
       increase the size of KEY and SIG RRs.  This increases the chance
       of DNS UDP packet overflow and the possible necessity for using
       higher overhead TCP in responses."</t>

       <t>Yet, defying some expectations, DNS over TCP remained little-used
       in real traffic across the Internet around this time.  Dynamic updates saw
       little deployment between autonomous networks.  Around the time
       DNSSEC was first defined, another new feature helped solidify
       UDP transport dominance for message transactions.</t>
     </section>

     <section title="EDNS(0)">
       <t>In 1999 the IETF published the Extension Mechanisms for DNS
       (EDNS(0)) in <xref target="RFC2671"></xref> (superseded in 2013 by
       an update in <xref target="RFC6891"></xref>).  That document
       standardized a way for communicating DNS nodes to perform
       rudimentary capabilities negotiation.  One such capability
       written into the base specification and present in every EDNS(0)-compatible
       message is the value of the maximum UDP payload size
       the sender can support.  This unsigned 16-bit field specifies,
       in bytes, the maximum (possibly fragmented) DNS message size a
       node is capable of receiving over UDP.  In practice, typical values are
       a subset of the 512- to 4096-byte range.  EDNS(0) became
       widely deployed over the next several years, and numerous surveys
       (<xref target="CASTRO2010"></xref>, <xref target="NETALYZR"></xref>)
       have shown many systems currently support larger UDP MTUs
       with EDNS(0).</t>

       <t>The natural effect of EDNS(0) deployment meant DNS messages
       larger than 512 bytes would be less reliant on TCP than they
       might otherwise have been.  While a non-negligible population of
       DNS systems lacked EDNS(0) or fell back to TCP when necessary,
       DNS clients still strongly prefer UDP to TCP.
       For example, as of 2014,
       DNS over TCP transactions remained a very small fraction of
       overall DNS traffic received by root name servers <xref target="VERISIGN"></xref>.</t>
     </section>

     <section title="Fragmentation and Truncation">
       <t>Although EDNS(0) provides a way for endpoints to signal support for
       DNS messages exceeding 512 bytes, the realities of a diverse and
       inconsistently deployed Internet may result in some large messages
       being unable to reach their destination.  Any IP datagram whose size
       exceeds the MTU of a link it transits will be fragmented and then
       reassembled by the receiving host.  Unfortunately, it is not uncommon
       for middleboxes and firewalls to block IP fragments.  If one or more
       fragments do not arrive, the application does not receive the message
       and the request times out.</t>

       <t>For IPv4-connected hosts, the MTU is often the Ethernet
       payload size of 1500 bytes.  This means that the largest unfragmented
       UDP DNS message that can be sent over IPv4 is likely 1472 bytes,
       although tunnel encapsulation may reduce that maximum message
       size in some cases.</t>

       <t>For
       IPv6, the situation is a little more complicated.  First, IPv6 headers
       are 40 bytes (versus 20 without options in IPv4).  Second, it seems as
       though some people have misinterpreted IPv6's required minimum MTU of
       1280 as a required maximum.  Third, fragmentation in IPv6 can only be
       done by the host originating the datagram.  The need to fragment is
       conveyed in an ICMPv6 "packet too big" message.  The originating host
       indicates a fragmented datagram with IPv6 extension headers.
       Unfortunately, it is quite common for both ICMPv6 and IPv6 extension
       headers to be blocked by middleboxes.  According to
       <xref target="HUSTON"/> some 35% <!-- 3,592 / 10,115 --> of IPv6-capable
       recursive resolvers were unable to receive a fragmented IPv6 packet.
       Even if the originating host does receive a signal that
       fragmentation is required, the stateless nature of the DNS
       protocol is such that the host does not generally retain a copy
       of the message concerned and hence is unable to fragment and
       re-send anyway.</t>

       <t>The practical consequence of all this is that DNS requestors
       must be prepared to retry queries with different EDNS(0) maximum
       message size values.  Administrators of <xref target="BIND"/> are likely to be 
       familiar with seeing "success resolving ... after reducing the
       advertised EDNS(0) UDP packet size to 512 octets" messages in their
       system logs.</t>

       <t>Often, reducing the EDNS(0) UDP packet size leads to a
       successful response.  That is, the necessary data fits within the
       smaller message size.  However, when the data does not fit, the
       server sets the truncated flag in its response, indicating the
       client should retry over TCP to receive the whole response.  This
       is undesirable from the client's point of view because it adds
       more latency and potentially undesirable from the server's point
       of view due to the increased resource requirements of TCP.</t>

       <t>The issues around fragmentation, truncation, and TCP are
       driving certain implementation and policy decisions in the DNS.
       Notably, Cloudflare implemented what it calls "DNSSEC black lies"
       <xref target="CLOUDFLARE"/> and uses ECDSA algorithms, such that
       their signed responses fit easily in 512 bytes.  The Key Signing Key (KSK) Rollover
       design team <xref target="DESIGNTEAM"/> spent a lot of time
       thinking and worrying about response sizes.  There is growing
       sentiment in the DNSSEC community that RSA key sizes beyond
       2048-bits are impractical and that critical infrastructure zones
       should transition to elliptic curve algorithms to keep response
       sizes manageable <xref target="ECDSA"/>.</t>

       <t>More recently, renewed security concerns about fragmented DNS
       messages (<xref target="AVOID_FRAGS"/>, <xref target="FRAG_POISON"/>)
       are leading implementors to consider smaller responses and lower
       default EDNS(0) UDP payload size values for both queriers and
       responders <xref target="FLAGDAY2020"/>.</t>

     </section>

     <section title="&quot;Only Zone Transfers Use TCP&quot;">
       <t>Today, the majority of the DNS community expects, or at least
       has a desire, to see DNS over TCP transactions occur without
       interference.  However there has also been a long-held belief by
       some operators, particularly for security-related reasons, that
       DNS over TCP services should be purposely limited or not provided
       at all <xref target="CHES94"></xref>, <xref
       target="DJBDNS"></xref>.  A popular meme is
       that DNS over TCP is only ever used for zone
       transfers and is generally unnecessary otherwise, with filtering
       all DNS over TCP traffic even described as a best practice.</t>

       <t>The position on restricting DNS over TCP had some
       justification given that historical implementations of DNS
       nameservers provided very little in the way of TCP connection
       management (for example see Section 6.1.2 of <xref
       target="RFC7766"></xref> for more details).  However, modern
       standards and implementations are nearing parity with the more
       sophisticated TCP management techniques employed by, for example,
       HTTP(S) servers and load balancers.</t>
     </section>
   </section>

   <section title="DNS over TCP Requirements">
     <t>An average increase in DNS message size (e.g., due to DNSSEC),
     the continued development of new DNS features (<xref
     target="dnsrfcs"></xref>), and a denial of service mitigation
     technique (<xref target="Security"></xref>), all show that
     DNS over TCP transactions are as important to the correct and safe
     operation of the Internet DNS as ever, if not more so.
     Furthermore, there has been serious research that argues
     connection-oriented DNS transactions may provide security and
     privacy advantages over UDP transport <xref target="TDNS"></xref>.
     In fact, the standard for DNS over TLS <xref target="RFC7858"></xref>
     is just this sort of specification.  Therefore, this document makes
     explicit that it is undesirable for network operators to
     artificially inhibit DNS over TCP transport.</t>

     <t>Section 6.1.3.2 in <xref target="RFC1123" /> is updated: All
     DNS resolvers and servers MUST support and service both UDP and
     TCP queries.
       <list hangIndent="10" style="symbols">
         <t>Authoritative servers MUST support and service all TCP
         queries so that they do not limit the size of responses to what
         fits in a single UDP packet.</t>
         <t>Recursive servers (or forwarders) MUST support and service
         all TCP queries so that they do not prevent large responses
         from a TCP-capable server from reaching its TCP-capable
         clients.</t>
       </list>
     Furthermore, the requirement in Section 6.1.3.2 of <xref
     target="RFC1123" /> around limiting the resources a server devotes
     to queries is hereby updated:</t>
 
     <t>OLD:
       <list hangIndent="10" style="empty">
          <t>A name server MAY limit the resources it devotes to TCP queries,
          but it SHOULD NOT refuse to service a TCP query just
          because it would have succeeded with UDP.</t>
       </list>

     NEW:
       <list hangIndent="10" style="empty">
           <t>A name server MAY limit the resources it devotes to queries, but
           it MUST NOT refuse to service a query just because it would have
           succeeded with another transport protocol.</t>
       </list>
     </t>

     <t>Lastly, Section 1 of <xref target="RFC1536"/> is updated to eliminate
     the misconception that TCP is only useful for zone transfers.</t>

     <t>Filtering of DNS over TCP is harmful in the general
     case.  DNS resolver and server operators MUST support and provide
     DNS service over both UDP and TCP transports.  Likewise, network
     operators MUST allow DNS service over both UDP and TCP transports.
     It is acknowledged that DNS over TCP service can pose operational
     challenges that are not present when running DNS over UDP alone,
     and vice-versa.  However, <!-- it is the aim of this document to argue that -->
     the potential damage incurred by prohibiting DNS over TCP
     service is more detrimental to the continued utility and success of
     the DNS than when its usage is allowed.</t>
   </section>

   <section title="Network and System Considerations">

   <t>This section describes measures that systems and applications
   can take to optimize performance over TCP and to protect themselves
   from TCP-based resource exhaustion and attacks.</t>

     <section title="Connection Establishment and Admission">

       <t>Resolvers and other DNS clients should be aware that some
       servers might not be reachable over TCP.  For this reason, clients
       MAY want to track and limit the number of TCP connections and
       connection attempts to a single server.  Additionally, DNS clients
       MAY want to enforce a short timeout on unestablished connections,
       rather than rely on the host operating system's TCP connection
       timeout, which is often around 60-120 seconds.</t>

       <t>The SYN flooding attack is a denial-of-service method
       affecting hosts that run TCP server processes <xref
       target="RFC4987"/>.  This attack can be very effective if
       not mitigated.  One of the most effective mitigation techniques
       is SYN cookies, which allows the server to avoid allocating
       any state until the successful completion of the three-way
       handshake.</t>

       <t>Services not intended for use by the public Internet,
       such as most recursive name servers, SHOULD be protected
       with access controls.  Ideally these controls are placed in
       the network, well before any unwanted TCP packets can
       reach the DNS server host or application.  If this is not
       possible, the controls can be placed in the application
       itself.  In some situations (e.g. attacks) it may be necessary
       to deploy access controls for DNS services that should
       otherwise be globally reachable.  See also <xref target="RFC5358"/>.</t>

       <t>The FreeBSD and NetBSD operating systems have an "accept filter" feature
       (<xref target="accept_filter"/>)
       that postpones delivery of TCP connections to applications
       until a complete, valid request has been received.  The
       dns_accf(9) filter ensures that a valid DNS message is
       received.  If not, the bogus connection never reaches the
       application.
       The Linux TCP_DEFER_ACCEPT feature, while more limited in scope,
       can provide some of the same benefits as the BSD accept filter
       feature.
       These features are implemented as low-level socket options,
       and are not activated automatically. If applications wish to
       use these features, they need to make specific calls to set the
       right options, and administrators may also need to configure the
       applications to appropriately use the features.</t>

       <t>Per <xref target="RFC7766"/>, applications and administrators
       are advised to remember that TCP MAY be used before sending
       any UDP queries.  Networks and applications MUST NOT be configured
       to refuse TCP queries that were not preceded by a UDP query.</t>

       <t>TCP Fast Open <xref target="RFC7413"/> (TFO) allows TCP
       clients to shorten the handshake for subsequent connections
       to the same server.  TFO saves one round-trip time in the
       connection setup.  DNS servers SHOULD enable TFO when possible.
       Furthermore, DNS servers clustered behind a single service
       address (e.g., anycast or load-balancing), SHOULD use the
       same TFO server key on all instances.</t>

       <t>DNS clients MAY also enable TFO.  Currently,
       on some operating systems it is not implemented, or is disabled by default.
       <xref target="WIKIPEDIA_TFO"/> describes applications and operating systems
       that support TFO.</t>

     </section>

     <section title="Connection Management">

       <t>Since host memory for TCP state is a finite resource, DNS
       clients and
       servers MUST actively manage their connections.  Applications
       that do not actively manage their connections
       can encounter resource exhaustion leading to denial of
       service.  For DNS, as in other protocols, there is a tradeoff
       between keeping connections open for potential future use and
       the need to free up resources for new connections that will arrive.</t>

       <t>DNS server software SHOULD provide a configurable limit
       on the total number of established TCP connections.  If the
       limit is reached, the application is expected to either close
       existing (idle) connections or refuse new connections.
       Operators SHOULD ensure the limit is configured appropriately
       for their particular situation.</t>

       <t>DNS server software MAY provide a configurable limit on
       the number of established connections per source IP address
       or subnet.  This can be used to ensure that a single or small
       set of users cannot consume all TCP resources and deny
       service to other users.  Operators SHOULD ensure this limit
       is configured appropriately, based on their number of diversity
       of users.</t>

       <t>DNS server software SHOULD provide a configurable timeout
       for idle TCP connections.  For very busy name servers this
       might be set to a low value, such as a few seconds.  For
       less busy servers it might be set to a higher value, such
       as tens of seconds.  DNS clients and servers SHOULD signal
       their timeout values using the edns-tcp-keepalive
       option <xref target="RFC7828"/>.</t>

       <t>DNS server software MAY provide a configurable limit on
       the number of transactions per TCP connection. This document
       does not offer advice on particular values for such a
       limit.</t>

       <t>Similarly, DNS server software MAY provide a configurable
       limit on the total duration of a TCP connection.  This
       document does not offer advice on particular values for such
       a limit.</t>

       <t>Since clients may not be aware of server-imposed limits,
       clients utilizing TCP for DNS need to always be prepared to
       re-establish connections or otherwise retry outstanding
       queries.</t> <!-- language lifted from RFC7766 -->

     </section>

     <section title="Connection Termination">

       <t>The TCP peer that initiates a
       connection close retains the socket in the TIME_WAIT state
       for some amount of time, possibly a few minutes. 
       It is generally preferable for clients to initiate the
       close of a TCP connection so that busy servers do not 
       accumulate many sockets in the TIME_WAIT state, which can
       cause performance problems or even denial of service.
       The edns-tcp-keepalive EDNS(0) option <xref target="RFC7828"/>
       can be used to encourage clients to close connections.</t>

       <t>On systems where large numbers of sockets in TIME_WAIT
       are observed (either as client or server), it may be beneficial to tune the local TCP
       parameters.  For example, the Linux kernel provides a number
       of "sysctl" parameters related to TIME_WAIT, such as
       net.ipv4.tcp_fin_timeout and
       net.ipv4.tcp_tw_reuse.  In extreme cases, implementors and
       operators of very busy servers may find it necessary to
       utilize the SO_LINGER socket option (<xref target="Stevens"/> Section
       7.5) with a value of zero so that the server doesn't accumulate
       TIME_WAIT sockets.</t>

     </section>

     <section title="DNS-over-TLS">

       <t>DNS messages may be sent over TLS to provide privacy
       between stubs and recursive resolvers. <xref target="RFC7858"/>
       is a Standards Track document describing how this works.
       Although DNS-over-TLS utilizes TCP port 853 instead of port 53, this
       document applies equally well to DNS-over-TLS.  Note, however,
       DNS-over-TLS is currently only defined between stubs and
       recursives.</t>

       <t>The use of TLS places even stronger operational burdens
       on DNS clients and servers.  Cryptographic functions for
       authentication and encryption requires additional processing.
       Unoptimized connection setup takes two additional round-trips
       compared to TCP, but can be reduced with TLS session
       resumption <xref target="RFC8446"/> and TLS False Start <xref
       target="RFC7918"/>.</t>

     </section>

   </section>

   <section title="DNS over TCP Filtering Risks">
     <t>Networks that filter DNS over TCP risk losing access to
     significant or important pieces of the DNS namespace.  For a
     variety of reasons a DNS answer may require a DNS over TCP query.
     This may include large message sizes, lack of EDNS(0) support, DDoS
     mitigation techniques (including <xref target="RRL"/>), or perhaps some future capability that is as
     yet unforeseen will also demand TCP transport.</t>

     <t>For example, <xref target="RFC7901"/> describes a latency-avoiding
     technique that sends extra data in DNS responses.  This makes
     responses larger and potentially increases the effectiveness of DDoS reflection
     attacks.  The specification mandates the use of TCP or DNS
     Cookies <xref target="RFC7873"/>.</t>

     <t>Even if any or all particular answers have consistently been
     returned successfully with UDP in the past, this continued behavior
     cannot be guaranteed when DNS messages are exchanged between
     autonomous systems.  Therefore, filtering of DNS over TCP is
     considered harmful and contrary to the safe and successful operation
     of the Internet.  This section enumerates some of the known risks
     at the time of this writing when networks filter DNS over
     TCP.</t>

     <section title="DNS Wedgie">
       <t>Networks that filter DNS over TCP may inadvertently cause
       problems for third-party resolvers as experienced by <xref
       target="TOYAMA"></xref>.  For example, a resolver receives queries
       for a moderately popular domain.  The resolver forwards the queries
       to the domain's authoritative name servers, but those servers
       respond with the TC bit set.  The resolver retries over TCP,
       but the authoritative server blocks DNS over TCP.  The pending
       connections consume resources on the resolver until they time out.
       If the number
       and frequency of these truncated-and-then-blocked queries is sufficiently high,
       the steady state of the resulting lost resources is a "DNS wedgie."
       A DNS wedgie is generally not easily or completely mitigated by the
       affected DNS resolver operator.</t>
     </section>

     <section title="DNS Root Zone KSK Rollover">
       <t>The plans for deploying a new root zone DNSSEC KSK highlighted
       a potential problem in retrieving the root zone key set <xref
       target="LEWIS"></xref>.  During some phases of the KSK rollover process,
       root zone DNSKEY responses were
       larger than 1280 bytes, the IPv6 minimum MTU for links
       carrying IPv6 traffic <xref target="RFC8200"/>.
       There was some concern <xref target="KSK_ROLLOVER_ARCHIVES"/>
       that any DNS server unable to receive large
       DNS messages over UDP, or any DNS message over TCP, would experience
       disruption while performing DNSSEC validation.</t>

       <t>However, during the
       year-long postponement of the KSK rollover there were no reported problems
       that could be attributed to the 1414 octet DNSKEY response when both
       the old and new keys were published in the zone.  Additionally, there
       were no reported problems during the two month period when the old key was
       published as revoked and the DNSKEY response was 1425 octets in size <xref target="ROLL_YOUR_ROOT"/>.</t>
     </section>

   </section>

   <section title="Logging and Monitoring">
     <t>Developers of applications that log or monitor DNS
     SHOULD NOT ignore TCP due to the perception that it is rarely used or
     is hard to process.  Operators SHOULD ensure that
     their monitoring and logging applications properly capture
     DNS messages over TCP.  Otherwise, attacks, exfiltration
     attempts, and normal traffic may go undetected.</t>

     <t>DNS messages over TCP are in no way guaranteed to arrive
     in single segments.  In fact, a clever attacker might attempt
     to hide certain messages by forcing them over very small TCP
     segments.  Applications that capture network packets (e.g.,
     with libpcap <xref target="libpcap"/>) SHOULD be prepared to implement and perform full
     TCP segment reassembly.  dnscap <xref target="dnscap"/> is an
     open-source example of a DNS logging program that implements
     TCP reassembly.</t>

     <t>Developers SHOULD also keep in mind connection reuse,
     query pipelining, and out-of-order responses when building and testing
     DNS monitoring applications.</t>

     <t>As an alternative to packet capture, some DNS server software
     supports dnstap <xref target="dnstap"/> as an integrated monitoring
     protocol intended to facilitate wide-scale DNS monitoring.</t>
   </section>

   <section anchor="IANA" title="IANA Considerations">
     <t>This memo includes no request to IANA.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>Ironically, returning truncated DNS over UDP answers in order
     to induce a client query to switch to DNS over TCP has become
     a common response to source address spoofed, DNS denial-of-service
     attacks <xref target="RRL"></xref>.  Historically, operators have
     been wary of TCP-based attacks, but in recent years, UDP-based
     flooding attacks have proven to be the most common protocol attack
     on the DNS.  Nevertheless, a high rate of short-lived DNS
     transactions over TCP may pose challenges.  In fact, <xref
     target="DAI21"></xref> details a class of IP fragmentation attacks
     on DNS transactions if the IP ID field can be predicted and a
     system is coerced to fragment rather than retransmit messages.
     While many operators have provided DNS over TCP service for many
     years without duress, past experience is no guarantee of future
     success.</t>

     <t>DNS over TCP is similar to many other Internet TCP services.
     TCP threats and many mitigation strategies have been
     well-documented in a series of documents such as <xref
     target="RFC4953"></xref>, <xref target="RFC4987"></xref>, <xref
     target="RFC5927"></xref>, and <xref target="RFC5961"></xref>.</t>

   </section>

   <section anchor="Privacy" title="Privacy Considerations">

     <t>Since DNS over both UDP and TCP uses the same underlying message
     format, the use of one transport instead of the other does not change
     the privacy characteristics of the message content (i.e., the name
     being queried). DNS over TLS or DTLS is the recommended way to
     achieve DNS privacy.</t>

     <t>Because TCP is somewhat more complex than UDP, some
     characteristics of a TCP conversation may enable fingerprinting and
     tracking that is not possible with UDP.  For example, the choice of
     initial sequence numbers, window size, and options might be able
     to identify a particular TCP implementation, or even individual
     hosts behind shared resources such as network address translators
     (NATs).</t>

   </section>

   <section anchor="Acknowledgments" title="Acknowledgments">
     <t>This document was initially motivated by feedback from students
     who pointed out that they were hearing contradictory information
     about filtering DNS over TCP messages.  Thanks in particular to a
     teaching colleague, JPL, who perhaps unknowingly encouraged the
     initial research into the differences between what the community has
     historically said and did.  Thanks to all the NANOG 63 attendees
     who provided feedback to an early talk on this subject.</t>
     <!-- https://archive.nanog.org/sites/default/files/nanog63-dnstrack-kristoff-dnstcp.pdf -->

     <t>The following individuals provided an array of feedback to help
     improve this document: Piet Barber, Sara Dickinson, Tony Finch, Bob Harold, Paul Hoffman, Tatuya Jinmei,
     Puneet Sood, and Richard Wilhelm.  The authors are also indebted to the contributions
     stemming from discussion in the tcpm working group meeting at
     IETF 104.  Any remaining errors or imperfections are the sole
     responsibility of the document authors.</t>
   </section>

 </middle>

 <back>
   <!-- References split into informative and normative -->

   <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

   <references title="Normative References">
     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC1035;
     &RFC1995;
     &RFC1996;
     &RFC2119;
     &RFC2181;
     &RFC5625;
     &RFC5936;
     &RFC6762;
     &RFC6891;
     &RFC7477;
     &RFC7720;
     &RFC7766;
     &RFC7828;
     &RFC7873;
     &RFC8174;
     &RFC8482;
     &RFC8490;

   </references>

   <references title="Informative References">
     <!-- Here we use entities that we defined at the beginning. -->

     &RFC0768;
     &RFC0793;
     &RFC1034;
     &RFC1123;
     &RFC1536;
     &RFC2136;
     &RFC2541;
     &RFC2671;
     &RFC2694;
     <!-- &RFC2629; -->
     &RFC3225;
     &RFC3226;
     &RFC4472;
     &RFC4953;
     &RFC4987;
     &RFC8446;
     &RFC5358;
     &RFC5452;
     &RFC5507;
     &RFC5927;
     &RFC5961;
     &RFC7534;
     &RFC6950;
     &RFC7413;
     &RFC7858;
     &RFC7901;
     &RFC7918;
     &RFC8027;
     &RFC8094;
     &RFC8162;
     &RFC8200;
     &RFC8324;
     &RFC8467;
     &RFC8483;
     &RFC8484;
     &RFC8501;
     &RFC8806;
     &RFC8906;
     &RFC8932;
     &RFC8945;

     <!-- A reference written by by an organization not a person. -->

     <reference anchor="CHES94">
       <front>
         <title>Firewalls and Internet Security: Repelling the Wily Hacker</title>
         <author fullname="William R. Cheswick" initials="W.R." surname="Cheswick" />
         <author fullname="Steven M. Bellovin" initials="S.M." surname="Bellovin" /> 
         <date year="1994" />
       </front>
     </reference>

     <reference anchor="DAI21">
       <front>
         <title>DNS-over-TCP Considered Vulnerable</title>
         <author fullname="Tianxiang Dai" initials="T." surname="Tianxiang" />
         <author fullname="Haya Shulman" initials="H." surname="Shulman" />
         <author fullname="Michael Waidner" initials="M." surname="Waidner" />
         <date year="2021" />
       </front>
     </reference>

     <reference anchor="DJBDNS"
                target="https://cr.yp.to/djbdns/tcp.html#why">
       <front>
         <title>When are TCP queries sent?</title>
         <author>
           <organization>D.J. Bernstein</organization>
         </author>
         <date year="2002" />
       </front> 
     </reference>

     <reference anchor="CASTRO2010">
       <front>
         <title>Understanding and preparing for DNS evolution</title>
         <author fullname="Sebastian Castro" initials="S." surname="Castro" />
         <author fullname="Min Zhang" initials="M." surname="Zhang" />
         <author fullname="Wolfgang John" initials="W." surname="John" />
         <author fullname="Duane Wessels" initials="D." surname="Wessels" />
         <author fullname="kc claffy" initials="k.c." surname="claffy" />
         <date year="2010" />
       </front>
     </reference>

     <reference anchor="NETALYZR">
       <front>
         <title>Netalyzr: Illuminating The Edge Network</title>
         <author fullname="Christian Kreibich" initials="C." surname="Kreibich" />
         <author fullname="Nicholas Weaver" initials="N." surname="Weaver" />
         <author fullname="Boris Nechaev" initials="B." surname="Nechaev" />
         <author fullname="Vern Paxson" initials="V." surname="Paxson" />
         <date year="2010" />
       </front>
     </reference>

     <reference anchor="VERISIGN">
       <front>
         <title>An Analysis of TCP Traffic in Root Server DITL Data</title>
         <author fullname="Matt Thomas" initials="M." surname="Thomas" />
         <author fullname="Duane Wessels" initials="D." surname="Wessels" />
         <date year="2014" />
       </front>
       <seriesInfo name="DNS-OARC 2014 Fall Workshop" value="Los Angeles" />
     </reference>

     <reference anchor="TDNS">
       <front>
         <title>Connection-oriented DNS to Improve Privacy and Security</title>
         <author fullname="Liang Zhu" initials="L." surname="Zhu" />
         <author fullname="John Heidemann" initials="J." surname="Heidemann" />
         <author fullname="Duane Wessels" initials="D." surname="Wessels" />
         <author fullname="Allison Mankin" initials="A." surname="Mankin" />
         <author fullname="Nikita Somaiya" initials="N." surname="Somaiya" />
         <date year="2015" />
       </front>
     </reference>

     <reference anchor="RRL">
       <front>
         <title>DNS Response Rate Limiting (DNS RRL)</title>
         <author fullname="Paul Vixie" initials="P." surname="Vixie" />
         <author fullname="Vernon Schryver" initials="V." surname="Schryver" />
         <date year="2012" month="April" />
       </front>
       <seriesInfo name="ISC-TN 2012-1" value="Draft1" />
     </reference>

     <reference anchor="LEWIS" target="https://ripe74.ripe.net/presentations/25-RIPE74-lewis-submission.pdf">
       <front>
         <title>2017 DNSSEC KSK Rollover</title>
         <author fullname="Edward Lewis" initials="E." surname="Lewis" />
         <date year="2017" month="May" day="8" />
       </front>
       <seriesInfo name="RIPE 74" value="Budapest, Hungary" />
     </reference>

     <reference anchor="TOYAMA">
       <front>
         <title>DNS Anomalies and Their Impacts on DNS Cache Servers</title>
         <author fullname="Katsuyasu Toyama" initials="K." surname="Toyama" />
         <author fullname="Keisuke Ishibashi" initials="K." surname="Ishibashi" />
         <author fullname="Masahiro Ishino" initials="M." surname="Ishino" />
         <author fullname="Chika Yoshimura" initials="C." surname="Yoshimura" />
         <author fullname="Kazunori Fujiwara" initials="K." surname="Fujiwara" />
         <date year="2004" />
       </front>
       <seriesInfo name="NANOG 32" value="Reston, VA USA" />
     </reference>         

     <reference anchor="HUSTON" target="https://blog.apnic.net/2017/08/22/dealing-ipv6-fragmentation-dns/">
	<front>
	  <title>Dealing with IPv6 fragmentation in the DNS</title>
	  <author fullname="Geoff Huston" initials="G." surname="Huston" />
	  <date year="2017" month="August" day="22"/>
	</front>
	<format type="HTML" target="https://blog.apnic.net/2017/08/22/dealing-ipv6-fragmentation-dns/"/>
     </reference>

     <reference anchor="CLOUDFLARE" target="https://blog.cloudflare.com/black-lies/">
	<front>
	  <title>Economical With The Truth: Making DNSSEC Answers Cheap</title>
	  <author fullname="Dani Grant" initials="D." surname="Grant">
	    <organization>Cloudflare</organization>
	  </author>
	  <date year="2016" month="June" day="24"/>
	</front>
	<format type="HTML" target="https://blog.cloudflare.com/black-lies/"/>
     </reference>

     <reference anchor="DESIGNTEAM" target="https://www.iana.org/reports/2016/root-ksk-rollover-design-20160307.pdf">
	<front>
	  <title>Root Zone KSK Rollover Plan</title>
	  <author>
	    <organization>Design Team Report</organization>
	  </author>
	  <date year="2015" month="December" day="18"/>
	</front>
	<format type="PDF" target="https://www.iana.org/reports/2016/root-ksk-rollover-design-20160307.pdf"/>
     </reference>

     <reference anchor="WIKIPEDIA_TFO" target="https://en.wikipedia.org/wiki/TCP_Fast_Open">
	<front>
	  <title>TCP Fast Open</title>
	  <author>
	    <organization>Wikipedia</organization>
	  </author>
	  <date year="2018" month="May" day="4"/>
	</front>
     </reference>

     <reference anchor="Stevens">
	<front>
	  <title>UNIX Network Programming Volume 1, Third Edition: The Sockets Networking API</title>
	  <author fullname="W. Richard Stevens" initials="W.R." surname="Stevens"/>
          <author fullname="Bill Fenner" initials="B." surname="Fenner"/>
          <author fullname="Andrew M. Rudoff" initials="A.M." surname="Rudoff"/>
	  <date year="2003" month="November" day="21"/>
	</front>
     </reference>

     <reference anchor="libpcap" target="https://www.tcpdump.org">
	<front>
	  <title>Tcpdump and Libpcap</title>
	  <author>
	    <organization>Tcpdump/Libpcap</organization>
	  </author>
	  <date year="2018" month="May" day="7"/>
	</front>
	<format type="HTML" target="https://www.tcpdump.org"/>
     </reference>

     <reference anchor="dnscap" target="https://www.dns-oarc.net/tools/dnscap">
	<front>
	  <title>DNSCAP</title>
	  <author>
	    <organization>DNS-OARC</organization>
	  </author>
	  <date year="2018" month="May" day="7"/>
	</front>
     </reference>

     <reference anchor="dnstap" target="https://dnstap.info">
	<front>
	  <title>dnstap</title>
	  <author fullname="Robert Edmonds" initials="R." surname="Edmonds"/>
	  <author fullname="Paul Vixie" initials="P." surname="Vixie"/>
	  <date year="2018" month="May" day="7"/>
	</front>
     </reference>

     <reference anchor="accept_filter" target="https://www.freebsd.org/cgi/man.cgi?query=accept_filter">
	<front>
	  <title>FreeBSD accept_filter(9)</title>
	  <author>
	    <organization>FreeBSD</organization>
	  </author>
	  <date year="2018" month="May" day="7"/>
	</front>
        <format type="HTML" target="https://www.freebsd.org/cgi/man.cgi?query=accept_filter"/>
     </reference>

     <reference anchor="AVOID_FRAGS">
	<front>
	  <title>Fragmentation Avoidance in DNS</title>
	  <author fullname="Kazunori Fujiwara" initials="K." surname="Fujiwara"/>
          <author fullname="Paul Vixie" initials="P." surname="Vixie"/>
	  <date year="2021" month="February"/>
	</front>
        <seriesInfo name="Work in Progress," value="draft-ietf-dnsop-avoid-fragmentation-04"/>
     </reference>

     <reference anchor="FRAG_POISON" target="https://u.cs.biu.ac.il/~herzbea/security/13-03-frag.pdf">
	<front>
	  <title>Fragmentation Considered Poisonous</title>
	  <author fullname="Amir Herzberg" initials="A." surname="Herzberg"/>
	  <author fullname="Haya Shulman" initials="H." surname="Shulman"/>
	  <date year="2012" month="May"/>
	</front>
     </reference>

     <reference anchor="ROLL_YOUR_ROOT" target="https://dl.acm.org/doi/10.1145/3355369.3355570">
	<front>
	  <title>Roll, Roll, Roll Your Root: A Comprehensive Analysis of the First Ever DNSSEC Root KSK Rollover</title>
	  <author fullname="Moritz M&uuml;ller" initials="M." surname="M&uuml;ller"/>
	  <author fullname="Matthew Thomas" initials="M." surname="Thomas"/>
	  <author fullname="Duane Wessels" initials="D." surname="Wessels"/>
	  <author fullname="Wes Hardaker" initials="W." surname="Hardaker"/>
	  <author fullname="Taejoong Chung" initials="T." surname="Chung"/>
	  <author fullname="Willem Toorop" initials="W." surname="Toorop"/>
	  <author fullname="Roland van Rijswijk-Deij" initials="R.v." surname="Rijswijk-Deij"/>
	  <date year="2019" month="Oct"/>
	</front>
     </reference>

     <reference anchor="BIND" target="https://www.isc.org/bind/">
	<front>
	  <title>BIND 9 - ISC</title>
	  <author>
            <organization>Internet Systems Consortium</organization>
	  </author>
	  <date year="2021" month="Apr"/>
	</front>
     </reference>

     <reference anchor="ECDSA" target="https://dl.acm.org/doi/10.1145/2831347.2831350">
       <front>
         <title>Making the Case for Elliptic Curves in DNSSEC</title>
         <author fullname="Roland van Rijswijk-Deij" initials="R." surname="Rijswijk-Deij"/>
         <author fullname="Anna Sperotto" initials="A." surname="Sperotto"/>
         <author fullname="Aiko Pras" initials="A." surname="Pras"/>
	 <date year="2015" month="Sep"/>
       </front>
     </reference>

     <reference anchor="FLAGDAY2020" target="https://dnsflagday.net/2020/">
	<front>
	  <title>DNS Flag Day 2020</title>
	  <author>
            <organization>Various DNS software and service providers</organization>
	  </author>
	  <date year="2020" month="Oct"/>
	</front>
     </reference>

     <reference anchor="KSK_ROLLOVER_ARCHIVES" target="https://mm.icann.org/pipermail/ksk-rollover/2019-January/date.html">
	<front>
	  <title>KSK Rollover List Archives</title>
	  <author>
            <organization>Internet Coporation for Assigned Names and Numbers</organization>
	  </author>
	  <date year="2019" month="Jan"/>
	</front>
     </reference>

   </references>

   <section anchor="dnsrfcs" title="Standards Related to DNS Transport over TCP">
     <t>This section enumerates all known IETF RFC documents that are
     currently of status Standard, Informational, Best Current Practice,
     or Experimental and either implicitly or explicitly make
     assumptions or statements about the use of TCP as a transport for
     the DNS germane to this document.</t>

     <section title="IETF RFC 1035 - DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION">
       <t>The Internet Standard <xref target="RFC1035"></xref> is the
       base DNS specification that explicitly defines support for DNS
       over TCP.</t>
     </section>

     <section title="IETF RFC 1536 - Common DNS Implementation Errors and Suggested Fixes">
       <t>This Informational document <xref target="RFC1536"></xref>
       states UDP is the "chosen protocol for communication though TCP
       is used for zone transfers."  That statement should now be
       considered in its historical context and is no longer a proper
       reflection of modern expectations.</t>
     </section>

     <section title="IETF RFC 1995 - Incremental Zone Transfer in DNS">
       <t>This Standards Track document <xref target="RFC1995"/>
       documents the use of TCP as the fallback transport when IXFR
       responses do not fit into a single UDP response.  As with AXFR,
       IXFR messages are typically delivered over TCP by default in
       practice.</t>
     </section>

     <section title="IETF RFC 1996 - A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)">
       <t>This Standards Track document <xref target="RFC1996"/>
       suggests a master server may decide to issue NOTIFY messages over
       TCP.  In practice, NOTIFY messages are generally sent over UDP,
       but this specification leaves open the possibility that the
       choice of transport protocol is up to the master server, and therefore
       a slave server ought to be able to operate over both UDP and TCP.</t>
     </section>

     <section title="IETF RFC 2181 - Clarifications to the DNS Specification">
       <t>This Standards Track document <xref target="RFC2181"/>
       includes clarifying text on how a client should react to the TC
       bit set on responses.  It is advised that the response should be
       discarded and the query resent using TCP.</t>
     </section>

     <section title="IETF RFC 2694 - DNS extensions to Network Address Translators (DNS_ALG)">
       <t>This Informational document <xref target="RFC2694"></xref>
       enumerates considerations for network address translation (NAT)
       devices to properly handle DNS traffic.  This document is
       noteworthy in its suggestion that
       "[t]ypically, TCP is used for AXFR requests,"
       as further evidence that helps
       explain why DNS over TCP may often have been treated very
       differently than DNS over UDP in operational networks.</t>
     </section>

     <section title="IETF RFC 3225 - Indicating Resolver Support of DNSSEC">
       <t>This Standards Track document <xref target="RFC3225"/>
       makes statements indicating DNS over TCP is "detrimental" as a
       result of increased traffic, latency, and server load.  This
       document is a companion to the next document in the RFC
       series expressing the requirement for EDNS(0) support for DNSSEC.</t>
     </section>

     <section title="IETF RFC 3326 - DNSSEC and IPv6 A6 aware server/resolver message size requirements">
       <t>Although updated by later DNSSEC RFCs,
       the Standards Track document <xref target="RFC3226"></xref>
       strongly argues in favor of
       UDP messages instead of TCP, largely for performance reasons.  The
       document declares EDNS(0) a requirement for DNSSEC servers and
       advocates that packet fragmentation may be preferable to TCP in
       certain situations.</t>
     </section>

     <section title="IETF RFC 4472 - Operational Considerations and Issues with IPv6 DNS">
       <t>This Informational document <xref target="RFC4472"></xref> notes
       that IPv6 data may increase DNS responses beyond what would fit in
       a UDP message.  Particularly noteworthy, perhaps less common today
       then when this document was written, it refers to implementations that
       truncate data without setting the TC bit to encourage the client to
       resend the query using TCP.</t>
     </section>

     <section title="IETF RFC 5452 - Measures for Making DNS More Resilient against Forged Answers">
       <t>This Informational document <xref target="RFC5452"></xref> arose
       as public DNS systems began to experience widespread abuse from spoofed
       queries, resulting in amplification and reflection attacks against
       unwitting victims.  One of the leading justifications for supporting
       DNS over TCP to thwart these attacks is briefly described in this
       document's 9.3 Spoof Detection and Countermeasure section.</t>
     </section>

     <section title="IETF RFC 5507 - Design Choices When Expanding the DNS">
       <t>This Informational document <xref target="RFC5507"></xref> was
       largely an attempt to dissuade new DNS data types from overloading the
       TXT resource record type.  In so doing it summarizes the conventional
       wisdom of DNS design and implementation practices.  The authors
       suggest TCP overhead and stateful properties pose challenges compared
       to UDP, and imply that UDP is generally preferred for performance and
       robustness.</t>
     </section>

     <section title="IETF RFC 5625 - DNS Proxy Implementation Guidelines">
       <t>This Best Current Practice document <xref target="RFC5625"></xref>
       provides DNS proxy implementation guidance including the mandate that a
       proxy "MUST [...] be prepared to receive and forward queries over TCP"
       even though it suggests historically TCP transport has not been strictly
       mandatory in stub resolvers or recursive servers.</t>
     </section>

     <section title="IETF RFC 5936 - DNS Zone Transfer Protocol (AXFR)">
       <t>This Standards Track document <xref target="RFC5936"/>
       provides a detailed specification for the zone transfer protocol,
       as originally outlined in the early DNS standards.  AXFR operation
       is limited to TCP and not specified for UDP.  This document
       discusses TCP usage at length.</t>
     </section>

     <section title="IETF RFC 7534 - AS112 Nameserver Operations">
       <t><xref target="RFC7534"></xref> is an Informational document
       enumerating the requirements for operation of AS112 project DNS
       servers.  New AS112 nodes are tested for their ability to provide
       service on both UDP and TCP transports, with the implication that
       TCP service is an expected part of normal operations.</t>
     </section>

     <section title="IETF RFC 6762 - Multicast DNS">
       <t>In this Standards Track document <xref target="RFC6762"></xref>, the
       TC bit is deemed to have essentially the same meaning as described
       in the original DNS specifications.  That is, if a response with the
       TC bit set is received, "[...] the querier SHOULD reissue its query
       using TCP in order to receive the larger response."</t>
     </section>

     <section title="IETF RFC 6891 - Extension Mechanisms for DNS (EDNS(0))">
       <t>This Standards Track document <xref target="RFC6891"></xref>
       helped slow the use of and need for DNS over TCP messages.  This
       document highlights concerns over server load and scalability in
       widespread use of DNS over TCP.</t>
     </section>

     <section title="IETF RFC 6950 - Architectural Considerations on Application Features in the DNS">
       <t>An Informational document <xref target="RFC6950"></xref> that draws
       attention to large data in the DNS.  TCP is referenced in the
       context as a common fallback mechanism and counter to some spoofing
       attacks.</t>
     </section>

     <section title="IETF RFC 7477 - Child-to-Parent Synchronization in DNS">
       <t>This Standards Track document <xref target="RFC7477"></xref>
       specifies a RRType and protocol to signal and synchronize NS, A,
       and AAAA resource record changes from a child to parent zone.
       Since this protocol may require multiple requests and responses,
       it recommends utilizing DNS over TCP to ensure the conversation
       takes place between a consistent pair of end nodes.</t>
     </section>

     <section title="IETF RFC 7720 - DNS Root Name Service Protocol and Deployment Requirements">
       <t>This Best Current Practice <xref target="RFC7720"></xref>
       declares root name service "MUST support UDP <xref
       target="RFC0768"></xref> and TCP <xref target="RFC0793"></xref>
       transport of DNS queries and responses."</t>
     </section>

     <section anchor="app-rfc7766" title="IETF RFC 7766 - DNS Transport over TCP - Implementation Requirements">
       <t>This Standards Track document <xref target="RFC7766"/>
       instructs DNS implementers to provide support for carrying DNS
       over TCP messages in their software, and 
       might be considered the direct ancestor of this operational
       requirements document.
       The implementation requirements document
       codifies mandatory support for DNS over TCP in compliant DNS
       software, but
       makes no recommendations to operators, which we seek to address
       here.</t>
     </section>

     <section title="IETF RFC 7828 - The edns-tcp-keepalive EDNS(0) Option">
       <t>This Standards Track document <xref target="RFC7828"></xref>
       defines an EDNS(0) option to negotiate an idle timeout value for
       long-lived DNS over TCP connections.  Consequently, this document
       is only applicable and relevant to DNS over TCP sessions and
       between implementations that support this option.</t>
     </section>

     <section title="IETF RFC 7858 - Specification for DNS over Transport Layer Security (TLS)">
       <t>This Standards Track document <xref target="RFC7858"></xref>
       defines a method for putting DNS messages into a TCP-based
       encrypted channel using TLS.  This specification is noteworthy
       for explicitly targeting the stub-to-recursive traffic, but
       does not preclude its application from recursive-to-authoritative
       traffic.</t> 
     </section>

     <section title="IETF RFC 7873 - Domain Name System (DNS) Cookies">
       <t>This Standards Track document <xref target="RFC7873"></xref>
       describes an EDNS(0) option to provide additional protection
       against query and answer forgery.  This specification mentions
       DNS over TCP as an alternative mechanism when DNS Cookies
       are not available.  The specification does make mention of DNS
       over TCP processing in two specific situations.  In one, when a
       server receives only a client cookie in a request, the server
       should consider whether the request arrived over TCP and if so,
       it should consider accepting TCP as sufficient to authenticate
       the request and respond accordingly.  In another, when a client
       receives a BADCOOKIE reply using a fresh server cookie, the
       client should retry using TCP as the transport.</t>
     </section>

     <section title="IETF RFC 7901 - CHAIN Query Requests in DNS">
       <t>This Experimental specification <xref target="RFC7901"></xref>
       describes an EDNS(0) option that can be used by a security-aware
       validating resolver to request and obtain a complete DNSSEC
       validation path for any single query.  This document requires the
       use of DNS over TCP or a source IP address verified transport
       mechanism such as EDNS-COOKIE <xref target="RFC7873"></xref>.</t>
     </section>

     <section title="IETF RFC 8027 - DNSSEC Roadblock Avoidance">
       <t>This document <xref target="RFC8027"></xref> details observed
       problems with DNSSEC deployment and mitigation techniques.
       Network traffic blocking and restrictions, including DNS over TCP
       messages, are highlighted as one reason for DNSSEC deployment
       issues.  While this document suggests these sorts of problems are
       due to "non-compliant infrastructure" and is of type BCP, the
       scope of the document is limited to detection and mitigation
       techniques to avoid so-called DNSSEC roadblocks.</t>
     </section>

     <section title="IETF RFC 8094 - DNS over Datagram Transport Layer Security (DTLS)">
       <t>This Experimental specification <xref target="RFC8094"></xref>
       details a protocol that uses a datagram transport (UDP), but
       stipulates that "DNS clients and servers that implement DNS over
       DTLS MUST also implement DNS over TLS in order to provide privacy
       for clients that desire Strict Privacy [...]."  This requirement
       implies DNS over TCP must be supported in case the message size
       is larger than the path MTU.</t>
     </section>

     <section title="IETF RFC 8162 - Using Secure DNS to Associate Certificates with Domain Names for S/MIME">
       <t>This Experimental specification <xref target="RFC8162"></xref>
       describes a technique to authenticate user X.509 certificates
       in an S/MIME system via the DNS.  The document points out that
       the new experimental resource record types are expected to carry
       large payloads, resulting in the suggestion that "applications
       SHOULD use TCP -- not UDP -- to perform queries for the SMIMEA
       resource record."</t>
     </section>

     <section title="IETF RFC 8324 - DNS Privacy, Authorization, Special Uses, Encoding, Characters, Matching, and Root Structure: Time for Another Look?">
       <t>An Informational document <xref target="RFC8324"></xref> that
       briefly discusses the common role and challenges of DNS over TCP
       throughout the history of DNS.</t>
     </section>

     <section title="IETF RFC 8467 - Padding Policies for Extension Mechanisms for DNS (EDNS(0))">
       <t>An Experimental document <xref target="RFC8467"></xref>
       reminds implementers to consider the underlying transport
       protocol (e.g. TCP) when calculating the padding length when
       artificially increasing the DNS message size with an EDNS(0)
       padding option.</t>
     </section>

     <section title="IETF RFC 8482 - Providing Minimal-Sized Responses to DNS Queries That Have QTYPE=ANY">
       <t><xref target="RFC8482"/> is a Standards Track document that
       describes alternative ways that DNS servers can respond to queries
       of type ANY, which are sometimes used to provide amplification
       in DDoS attacks.  The specification notes that responders may
       behave differently, depending on the transport.  For example,
       minimal-sized responses may be used over UDP transport, while
       full responses may be given over TCP.</t>
     </section>

     <section title="IETF RFC 8483 - Yeti DNS Testbed">
       <t>This Informational document <xref target="RFC8483"></xref>
       describes a testbed environment that highlights some DNS over TCP
       behaviors, including issues involving packet fragmentation and
       operational requirements for TCP stream assembly in order to
       conduct DNS measurement and analysis.</t>
     </section>

     <section title="IETF RFC 8484 - DNS Queries over HTTPS (DoH)">
       <t>This Standards Track document <xref target="RFC8484"></xref>
       defines a protocol for sending DNS queries and responses over
       HTTPS.  This specification assumes TLS and TCP for the underlying
       security and transport layers, respectively.  Self-described as a
       technique that more closely resembles a tunneling mechanism,
       DoH nevertheless likely implies DNS over TCP in some sense, if not
       directly.</t>
     </section>

     <section title="IETF RFC 8490 - DNS Stateful Operations">
       <t>This Standards Track document <xref target="RFC8490"></xref>
       updates the base protocol specification with a new OPCODE to
       help manage stateful operations in persistent sessions, such
       as those that might be used by DNS over TCP.</t>
     </section>

     <section title="IETF RFC 8501 - Reverse DNS in IPv6 for Internet Service Providers">
       <t>This Informational document <xref target="RFC8501"></xref>
       identifies potential operational challenges with Dynamic DNS
       including denial-of-service threats.  The document suggests TCP
       may provide some advantages, but that updating hosts would need
       to be explicitly configured to use TCP instead of UDP.</t>
     </section>

     <section title="IETF RFC 8806 - Running a Root Server Local to a Resolver">
       <t>This Informational document <xref target="RFC8806"></xref>
       describes how to obtain and operate a local copy of the root zone
       with examples showing how to pull from authoritative sources using
       a DNS over TCP zone transfer.</t>
     </section>

     <section title="IETF RFC 8906 - A Common Operational Problem in DNS Servers: Failure to Communicate">
       <t>This Best Current Practice document <xref target="RFC8906"></xref>
       discusses a number of DNS operational failure scenarios and how to
       avoid them.  This includes discussions involving DNS over TCP queries,
       EDNS over TCP, and a testing methodology that includes a section on
       verifying DNS over TCP functionality.</t>
     </section>

     <section title="IETF RFC 8932 - Recommendations for DNS Privacy Service Operators">
       <t>This Best Current Practice document <xref target="RFC8932"></xref>
       presents privacy considerations to DNS privacy service operators.
       These mechanisms sometimes include the use of TCP and are therefore
       susceptible to information leakage such as TCP-based fingerprinting.
       This document also references a draft version of this document.</t>
     </section>

     <section title="IETF RFC 8945 - Secret Key Transaction Authentication for DNS (TSIG)">
       <t>This Standards Track document <xref target="RFC8945"></xref>
       recommends a client use TCP if truncated TSIG messages are
       received.</t>
     </section>

   </section>

 </back>
</rfc>
